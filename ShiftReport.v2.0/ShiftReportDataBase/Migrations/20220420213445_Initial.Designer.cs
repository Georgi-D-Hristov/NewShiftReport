// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ShiftReportDataBase;

#nullable disable

namespace ShiftReportDataBase.Migrations
{
    [DbContext(typeof(ShiftReportDbContext))]
    [Migration("20220420213445_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.0-preview.2.22153.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("ShiftReportDataBase.Models.Case", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Action")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("EndTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("EngineerId")
                        .HasColumnType("int");

                    b.Property<string>("IssueDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProductVariant")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("StatusId")
                        .HasColumnType("int");

                    b.Property<int>("TestEquipmentId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EngineerId");

                    b.HasIndex("StatusId");

                    b.HasIndex("TestEquipmentId");

                    b.ToTable("Cases");
                });

            modelBuilder.Entity("ShiftReportDataBase.Models.Engineer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Engineers");
                });

            modelBuilder.Entity("ShiftReportDataBase.Models.SparePart", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("LocationId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<int>("TestEquipmentId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("LocationId");

                    b.HasIndex("TestEquipmentId");

                    b.ToTable("SpareParts");
                });

            modelBuilder.Entity("ShiftReportDataBase.Models.SparePartsLocation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LocationPicture")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("SparePartsLocations");
                });

            modelBuilder.Entity("ShiftReportDataBase.Models.Status", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Discription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Statuses");
                });

            modelBuilder.Entity("ShiftReportDataBase.Models.TestEquipment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TestEquipmentTypeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TestEquipmentTypeId");

                    b.ToTable("TestEquipments");
                });

            modelBuilder.Entity("ShiftReportDataBase.Models.TestEquipmetType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TestEquipmetTypes");
                });

            modelBuilder.Entity("ShiftReportDataBase.Models.Case", b =>
                {
                    b.HasOne("ShiftReportDataBase.Models.Engineer", "Engineer")
                        .WithMany("TakenCases")
                        .HasForeignKey("EngineerId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("ShiftReportDataBase.Models.Status", "Status")
                        .WithMany("Cases")
                        .HasForeignKey("StatusId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("ShiftReportDataBase.Models.TestEquipment", "TestEquipment")
                        .WithMany()
                        .HasForeignKey("TestEquipmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Engineer");

                    b.Navigation("Status");

                    b.Navigation("TestEquipment");
                });

            modelBuilder.Entity("ShiftReportDataBase.Models.SparePart", b =>
                {
                    b.HasOne("ShiftReportDataBase.Models.SparePartsLocation", "Location")
                        .WithMany("SpareParts")
                        .HasForeignKey("LocationId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("ShiftReportDataBase.Models.TestEquipment", "TestEquipment")
                        .WithMany("SpareParts")
                        .HasForeignKey("TestEquipmentId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Location");

                    b.Navigation("TestEquipment");
                });

            modelBuilder.Entity("ShiftReportDataBase.Models.TestEquipment", b =>
                {
                    b.HasOne("ShiftReportDataBase.Models.TestEquipmetType", "Type")
                        .WithMany("TestEquipments")
                        .HasForeignKey("TestEquipmentTypeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Type");
                });

            modelBuilder.Entity("ShiftReportDataBase.Models.Engineer", b =>
                {
                    b.Navigation("TakenCases");
                });

            modelBuilder.Entity("ShiftReportDataBase.Models.SparePartsLocation", b =>
                {
                    b.Navigation("SpareParts");
                });

            modelBuilder.Entity("ShiftReportDataBase.Models.Status", b =>
                {
                    b.Navigation("Cases");
                });

            modelBuilder.Entity("ShiftReportDataBase.Models.TestEquipment", b =>
                {
                    b.Navigation("SpareParts");
                });

            modelBuilder.Entity("ShiftReportDataBase.Models.TestEquipmetType", b =>
                {
                    b.Navigation("TestEquipments");
                });
#pragma warning restore 612, 618
        }
    }
}
